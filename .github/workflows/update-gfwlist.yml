name: Update Autoproxy

on:
  schedule:
    - cron: "0 0 * * *" # 每天 UTC 时间 00:00 执行

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      
      - name: Install dependencies
        run: pip install requests
      
      - name: Check upstream repository
        run: |
          last_commit=$(curl --silent "https://api.github.com/repos/gfwlist/gfwlist/commits?per_page=1" | grep -oP '(?<="date": ")[^"]+')
          last_commit_date=$(echo "$last_commit" | head -n1)
          last_commit_date=$(date -u -d "$last_commit_date" +%s)
          current_date=$(date -u +%s)
          time_diff=$((current_date - last_commit_date))
          if ((time_diff < 8886400)); then
            echo "::set-output name=updated::true"
          else
            echo "::set-output name=updated::false"
          fi
      
      - name: Merge GFWlist and publish
        if: steps.check.outputs.updated == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          python merge-gfwlist.py
          git add autoproxy.txt
          git commit -m "Update autoproxy.txt"
          git push
      
      - name: Create release
        if: steps.check.outputs.updated == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Autoproxy Release v${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.FLOW_TOKEN }}
      
      - name: Upload autoproxy.txt
        if: steps.check.outputs.updated == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./autoproxy.txt
          asset_name: autoproxy.txt
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.FLOW_TOKEN }}
